// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models.Data;

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210620095438_CreateIssues")]
    partial class CreateIssues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.IssueModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RepoIdId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("RepoIdId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("backend.Models.RepoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Forks")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RepoModelId")
                        .HasColumnType("int");

                    b.Property<long>("Stars")
                        .HasColumnType("bigint");

                    b.Property<int?>("User_IdId")
                        .HasColumnType("int");

                    b.Property<long>("Watch")
                        .HasColumnType("bigint");

                    b.Property<bool>("isPublic")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RepoModelId");

                    b.HasIndex("User_IdId");

                    b.ToTable("Repos");
                });

            modelBuilder.Entity("backend.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Models.IssueModel", b =>
                {
                    b.HasOne("backend.Models.RepoModel", "RepoId")
                        .WithMany()
                        .HasForeignKey("RepoIdId");

                    b.Navigation("RepoId");
                });

            modelBuilder.Entity("backend.Models.RepoModel", b =>
                {
                    b.HasOne("backend.Models.RepoModel", null)
                        .WithMany("Issues")
                        .HasForeignKey("RepoModelId");

                    b.HasOne("backend.Models.UserModel", "User_Id")
                        .WithMany("Repos")
                        .HasForeignKey("User_IdId");

                    b.Navigation("User_Id");
                });

            modelBuilder.Entity("backend.Models.RepoModel", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("backend.Models.UserModel", b =>
                {
                    b.Navigation("Repos");
                });
#pragma warning restore 612, 618
        }
    }
}
