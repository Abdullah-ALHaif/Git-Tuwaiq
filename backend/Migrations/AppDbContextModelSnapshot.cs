// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models.Data;

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.IssueModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RepoIdId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("RepoIdId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("backend.Models.RepoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Forks")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RepoModelId")
                        .HasColumnType("int");

                    b.Property<long>("Stars")
                        .HasColumnType("bigint");

                    b.Property<int?>("User_IdId")
                        .HasColumnType("int");

                    b.Property<long>("Watch")
                        .HasColumnType("bigint");

                    b.Property<bool>("isPublic")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RepoModelId");

                    b.HasIndex("User_IdId");

                    b.ToTable("Repos");
                });

            modelBuilder.Entity("backend.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 6, 20, 13, 20, 39, 850, DateTimeKind.Local).AddTicks(1916),
                            Email = "Mansoviic@gmail.com",
                            ImgUrl = "https://i.picsum.photos/id/870/200/300.jpg?blur=2&grayscale&hmac=ujRymp644uYVjdKJM7kyLDSsrqNSMVRPnGU99cKl6Vs",
                            Name = "Mansovic",
                            Password = "P@assWord123",
                            UserName = "Mansovic"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 6, 20, 13, 20, 39, 851, DateTimeKind.Local).AddTicks(7715),
                            Email = "Abdulmajeed@gmail.com",
                            ImgUrl = "https://i.picsum.photos/id/24/200/300.jpg?blur=5&hmac=TXkpvcSKinZ53tqovqHo05FiiHPU9ZDzZH2wcoyxuHI",
                            Name = "Abdulmajeed",
                            Password = "P@assWord123",
                            UserName = "Abdulmajeed"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 6, 20, 13, 20, 39, 851, DateTimeKind.Local).AddTicks(7813),
                            Email = "Riyadh@gmail.com",
                            ImgUrl = "https://www.arabnews.com/sites/default/files/styles/n_670_395/public/2021/01/28/2448851-2106814390.jpg?itok=vbM4D77f",
                            Name = "Riyadh",
                            Password = "P@assWord123",
                            UserName = "Riyadh"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 6, 20, 13, 20, 39, 851, DateTimeKind.Local).AddTicks(7830),
                            Email = "Fos@gmail.com",
                            ImgUrl = "https://i.guim.co.uk/img/media/327e46c3ab049358fad80575146be9e0e65686e7/0_0_1023_742/master/1023.jpg?width=445&quality=45&auto=format&fit=max&dpr=2&s=331a1bc4f5d7a96a6131f4f142065662",
                            Name = "Fos",
                            Password = "P@assWord123",
                            UserName = "Fos"
                        });
                });

            modelBuilder.Entity("backend.Models.IssueModel", b =>
                {
                    b.HasOne("backend.Models.RepoModel", "RepoId")
                        .WithMany()
                        .HasForeignKey("RepoIdId");

                    b.Navigation("RepoId");
                });

            modelBuilder.Entity("backend.Models.RepoModel", b =>
                {
                    b.HasOne("backend.Models.RepoModel", null)
                        .WithMany("Issues")
                        .HasForeignKey("RepoModelId");

                    b.HasOne("backend.Models.UserModel", "User_Id")
                        .WithMany("Repos")
                        .HasForeignKey("User_IdId");

                    b.Navigation("User_Id");
                });

            modelBuilder.Entity("backend.Models.RepoModel", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("backend.Models.UserModel", b =>
                {
                    b.Navigation("Repos");
                });
#pragma warning restore 612, 618
        }
    }
}
